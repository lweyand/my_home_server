---

- name: Apache| Install apache2 & php7
  apt:
    name: "{{ httpd_packages | join(',') }}"
    state: present

- name: Apache| Configure php
  copy:
    src: files/php/apache2/php.ini
    dest: "/etc/php/{{ php_version }}/apache2/php.ini"
    mode: 0644
    owner: root
    group: root
  notify:
    - restart httpd

- name: Apache| Deploy config
  template:
    src: "apache2.conf"
    dest: "/etc/apache2/apache2.conf"
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
  notify:
    - restart httpd

- name: Apache| Deploy base configuration
  template:
    src: "apache2.conf"
    dest: "/etc/apache2/apache2.conf"
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
    backup: yes
    validate: 'apachectl -f /etc/apache2/apache2.conf'
  notify:
    - restart httpd

- name: Apache| Deploy default virtual hosts Configuration
  template:
    src: "default-virtualhost.conf"
    dest: "/etc/apache2/sites-available/default.conf"
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
  notify:
    - restart httpd
- name: Apache| Create symlink to activate default
  file:
    src: "/etc/apache2/sites-available/default.conf"
    dest: "/etc/apache2/sites-enabled/000-default.conf"
    state: link
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
  notify:
    - restart httpd


- name: Apache| Deploy virtual hosts Configuration
  template:
    src: "space-virtualhost.conf"
    dest: "/etc/apache2/sites-available/{{ item.key }}.conf"
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
  when: "'http' in item.value.services and 'no_access' != item.value.web_access and 'present' == item.value.state"
  loop: "{{ lookup('dict', spaces) }}"
  notify:
    - restart httpd

- name: Apache| Delete virtual hosts Configuration
  file:
    dest: "/etc/apache2/sites-available/{{ item.key }}.conf"
    state: absent
  when: "'http' in item.value.services and 'no_access' != item.value.web_access and 'absent' == item.value.state"
  loop: "{{ lookup('dict', spaces) }}"
  notify:
    - restart httpd

- name: Apache| Create symlink to activate
  file:
    src: "/etc/apache2/sites-available/{{ item.key }}.conf"
    dest: "/etc/apache2/sites-enabled/{{ item.key }}.conf"
    state: link
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
  when: "'http' in item.value.services and 'no_access' != item.value.web_access and 'present' == item.value.state"
  loop: "{{ lookup('dict', spaces) }}"
  notify:
    - restart httpd

- name: Apache| Delete symlink to disable
  file:
    dest: "/etc/apache2/sites-enabled/{{ item.key }}.conf"
    state: absent
  when: "'http' in item.value.services and 'no_access' != item.value.web_access and 'absent' == item.value.state"
  loop: "{{ lookup('dict', spaces) }}"
  notify:
    - restart httpd

- name: Apache| Load modules
  apache2_module:
    state: present
    name: "{{ item }}"
  with_items:
  - "{{ httpd_modules }}"
  notify:
    - restart httpd

- name: Apache| Deploy base index html
  template:
    src: "index.html"
    dest: "{{ base_path }}/{{ item.key }}/{{ html_dir }}/index.html"
    owner: "{{ item.value.user }}"
    group: "{{ item.value.group }}"
    force: no
  when: "'http' in item.value.services and 'present' == item.value.state"
  loop: "{{ lookup('dict', spaces) }}"

- name: Apache| Deploy base index php
  template:
    src: "index.php"
    dest: "{{ base_path }}/{{ item.key }}/{{ html_dir }}/index.php"
    owner: "{{ item.value.user }}"
    group: "{{ item.value.group }}"
    force: no
  when: "'http' in item.value.services and 'present' == item.value.state"
  loop: "{{ lookup('dict', spaces) }}"
