---

- name: Users| Compute server_groups
  set_fact:
    server_groups: "{{ server_users | dict2items | json_query(select_query) }}"
  vars:
    select_query: "[*].value.group"

- name: Users| Create groups
  group:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ server_groups }}"

- name: Users| Compute users and passwords
  set_fact:
    server_users_psswds: "{{ server_users | combine(server_passwords, recursive=True)}}"

- name: Users| Create users
  user:
    name: "{{ item.key }}"
    group: "{{ item.value.group }}"
    groups: "{% if item.value.groups is defined %}{{ item.value.groups | join(',') }}{% else %}{%endif%}"
    shell: "{{ item.value.shell }}"
    password: "{{ item.value.password | password_hash('sha512', secret_salt) }}"
    home: "{{ base_path }}/{{ users_dir }}/{{ item.key }}/home"
    state: present
  loop: "{{ lookup('dict', server_users_psswds ) }}"

- name: Users| Update Apache Httpd user
  # /etc/passwd
  # www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
  # /etc/group
  # www-data:x:33:
  # /etc/shadow
  # www-data:*:17680:0:99999:7:::
  user:
    name: "{{ apache_user }}"
    group: "{{ apache_group }}"
    groups: "{{ server_groups | join(',') }}"
    state: present

- name: Users| Create spaces technical groups
  group:
    name: "{%if item.value.group_short is defined %}{{ item.value.group_short }}{%else%}{{ item.key }}{%endif%}"
    state: present
  loop: "{{ lookup('dict', spaces) }}"

- name: Users| Create spaces technical users
  user:
    name: "{%if item.value.group_short is defined %}{{ item.value.group_short }}{%else%}{{ item.key }}{%endif%}"
    group: "{%if item.value.group_short is defined %}{{ item.value.group_short }}{%else%}{{ item.key }}{%endif%}"
    comment: "{% if item.value.comment is defined %}{{ item.value.comment }}{% else %}{%endif%}"
    shell: "/bin/false"
    home: "{{ base_path }}/{{ item.key }}"
    state: present
  loop: "{{ lookup('dict', spaces) }}"